docker build -t victim-server .
docker run -d --name victim-server -p 80:80 -v "C:/path/to/output/directory:/output" victim-server

## Set "C:/path/to/output/directory" to the output directory you want in your computer for the pcap file. Do NOT change the ":/output" part of that

## If you want to access the generated file you can:
	1. If the server is still running go in docker to 'Containers -> victim-server -> Files -> capture.pcap (Generated constantly while running) ->  Right-Click -> Save
	2. If nothing fails when stopping the server (Check the logs in docker). You can go to the EMAIL ACOUNT (Login details on the MAIL_ACCOUNT.txt) and look at the outgoing mail. To change to which email the file is sent you can go to 'stop.py -> line 11: msg["To"] = "email.account@gmail.com"'

## Explanation of how the server works:
	1. Dockerfile: Installs libraries and copies code into the container
	2. Dockerfile: Runs stop.sh
	3. stop.sh: Traps stopping the container with preprocess.py, stop.py and cleanup.py
	4. stop.sh: Runs tcpdump to store data on capture.pcap (Stored in the container)
	5. When stopped:
		6. Printing "Container stopped. Running scripts..." 
		7. Running pre_process.py: Converts 'capture.pcap -> capture.csv' [SOMETIMES FAILS], NEVER RUN WITHOUT ATTACK (Empty .pcap)
		8. Running stop.py: Sends the 'capture.csv' from the email in MAIL_ACCOUNT.txt to any email account
		9 . Running cleanup.py: Deletes the captute.pcap and capture.csv files for the next time the code runs


